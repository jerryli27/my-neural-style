for file in *.jpg; do convert $file -resize 1024 compressed-$file; done



for sourcefile in source_compressed/*.JPG; do
for styletype in 1 2 3; do 
python neural_style.py --content=$sourcefile --styles style_compressed/style$styletype/1.jpg style_compressed/style$styletype/2.jpg --style-blend-weights 0.5 0.5 --output $sourcefile-blended-$styletype.jpg
done
done


for sourcefile in source_compressed/*.JPG; do
for styletype in 1 2 3; do 
python neural_style.py --content=$sourcefile --styles style_compressed/style$styletype/1.jpg style_compressed/style$styletype/2.jpg --style-blend-weights 0.5 0.5 --output $sourcefile-blended-$styletype.jpg
done
done

for i in {1..40}
do
echo "style_compressed/rella_compressed/compressed-$i.jpg"
done

for i in {1..40}
do
echo 0.025
done

for sourcefile in source_compressed/*.JPG; do
python neural_style.py --content=$sourcefile --styles style_compressed/rella_compressed/compressed-1.jpg style_compressed/rella_compressed/compressed-2.jpg style_compressed/rella_compressed/compressed-3.jpg style_compressed/rella_compressed/compressed-4.jpg style_compressed/rella_compressed/compressed-5.jpg style_compressed/rella_compressed/compressed-6.jpg style_compressed/rella_compressed/compressed-7.jpg style_compressed/rella_compressed/compressed-8.jpg style_compressed/rella_compressed/compressed-9.jpg style_compressed/rella_compressed/compressed-10.jpg style_compressed/rella_compressed/compressed-11.jpg style_compressed/rella_compressed/compressed-12.jpg style_compressed/rella_compressed/compressed-13.jpg style_compressed/rella_compressed/compressed-14.jpg style_compressed/rella_compressed/compressed-15.jpg style_compressed/rella_compressed/compressed-16.jpg style_compressed/rella_compressed/compressed-17.jpg style_compressed/rella_compressed/compressed-18.jpg style_compressed/rella_compressed/compressed-19.jpg style_compressed/rella_compressed/compressed-20.jpg style_compressed/rella_compressed/compressed-21.jpg style_compressed/rella_compressed/compressed-22.jpg style_compressed/rella_compressed/compressed-23.jpg style_compressed/rella_compressed/compressed-24.jpg style_compressed/rella_compressed/compressed-25.jpg style_compressed/rella_compressed/compressed-26.jpg style_compressed/rella_compressed/compressed-27.jpg style_compressed/rella_compressed/compressed-28.jpg style_compressed/rella_compressed/compressed-29.jpg style_compressed/rella_compressed/compressed-30.jpg style_compressed/rella_compressed/compressed-31.jpg style_compressed/rella_compressed/compressed-32.jpg style_compressed/rella_compressed/compressed-33.jpg style_compressed/rella_compressed/compressed-34.jpg style_compressed/rella_compressed/compressed-35.jpg style_compressed/rella_compressed/compressed-36.jpg style_compressed/rella_compressed/compressed-37.jpg style_compressed/rella_compressed/compressed-38.jpg style_compressed/rella_compressed/compressed-39.jpg style_compressed/rella_compressed/compressed-40.jpg --style-blend-weights 0.025 0.025 0.025 0.025 0.025 0.025 0.025 0.025 0.025 0.025 0.025 0.025 0.025 0.025 0.025 0.025 0.025 0.025 0.025 0.025 0.025 0.025 0.025 0.025 0.025 0.025 0.025 0.025 0.025 0.025 0.025 0.025 0.025 0.025 0.025 0.025 0.025 0.025 0.025 0.025 --output $sourcefile-blended-$styletype.jpg
done



for sourcefile in source_compressed/*.JPG; do
python neural_style.py --content=$sourcefile --styles style_compressed/rella_compressed/compressed-1.jpg style_compressed/rella_compressed/compressed-2.jpg style_compressed/rella_compressed/compressed-3.jpg style_compressed/rella_compressed/compressed-4.jpg style_compressed/rella_compressed/compressed-5.jpg style_compressed/rella_compressed/compressed-6.jpg style_compressed/rella_compressed/compressed-7.jpg style_compressed/rella_compressed/compressed-8.jpg style_compressed/rella_compressed/compressed-9.jpg style_compressed/rella_compressed/compressed-10.jpg --style-blend-weights 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 --output $sourcefile-blended-$styletype.jpg
done


for lr in 1 2 3 4 5 6 0.1 0.5; do
python neural_style.py --content=source_compressed/compressed-IMG_0677.JPG --styles style_compressed/rella_compressed/compressed-1.jpg style_compressed/rella_compressed/compressed-2.jpg style_compressed/rella_compressed/compressed-3.jpg style_compressed/rella_compressed/compressed-4.jpg style_compressed/rella_compressed/compressed-5.jpg style_compressed/rella_compressed/compressed-6.jpg style_compressed/rella_compressed/compressed-7.jpg style_compressed/rella_compressed/compressed-8.jpg style_compressed/rella_compressed/compressed-9.jpg style_compressed/rella_compressed/compressed-10.jpg --style-blend-weights 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 --output source_compressed/compressed-IMG_0677.JPG-blended-$lr.jpg --learning-rate $lr --iterations 200
done


for lr in 10 15 20 25 30 35 40; do
python neural_style.py --content=source_compressed/compressed-IMG_0677.JPG --styles style_compressed/rella_compressed/compressed-1.jpg style_compressed/rella_compressed/compressed-2.jpg style_compressed/rella_compressed/compressed-3.jpg style_compressed/rella_compressed/compressed-4.jpg style_compressed/rella_compressed/compressed-5.jpg style_compressed/rella_compressed/compressed-6.jpg style_compressed/rella_compressed/compressed-7.jpg style_compressed/rella_compressed/compressed-8.jpg style_compressed/rella_compressed/compressed-9.jpg style_compressed/rella_compressed/compressed-10.jpg style_compressed/rella_compressed/compressed-11.jpg style_compressed/rella_compressed/compressed-12.jpg style_compressed/rella_compressed/compressed-13.jpg style_compressed/rella_compressed/compressed-14.jpg style_compressed/rella_compressed/compressed-15.jpg style_compressed/rella_compressed/compressed-16.jpg style_compressed/rella_compressed/compressed-17.jpg style_compressed/rella_compressed/compressed-18.jpg style_compressed/rella_compressed/compressed-19.jpg style_compressed/rella_compressed/compressed-20.jpg --style-blend-weights 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 --output source_compressed/compressed-IMG_0677.JPG-blended-$lr.jpg --learning-rate $lr --iterations 200
done


python neural_style.py --content=source_compressed/compressed-IMG_0677.JPG --styles style_compressed/rella_compressed_2/1.jpg style_compressed/rella_compressed_2/2.jpg style_compressed/rella_compressed_2/3.jpg style_compressed/rella_compressed_2/4.jpg style_compressed/rella_compressed_2/5.jpg style_compressed/rella_compressed_2/6.jpg style_compressed/rella_compressed_2/7.jpg style_compressed/rella_compressed_2/8.jpg --style-blend-weights 0.125 0.125 0.125 0.125 0.125 0.125 0.125 0.125 --output source_compressed/compressed-IMG_0677.JPG-blended-rella2-10.jpg --learning-rate 10 --iterations 200 --style-weight 5 --content-weight 5



python neural_style.py --content=source_compressed/compressed-IMG_0677.JPG --styles style_compressed/rella_compressed_2/1.jpg style_compressed/rella_compressed_2/2.jpg style_compressed/rella_compressed_2/3.jpg style_compressed/rella_compressed_2/4.jpg style_compressed/rella_compressed_2/5.jpg style_compressed/rella_compressed_2/6.jpg style_compressed/rella_compressed_2/7.jpg style_compressed/rella_compressed_2/8.jpg --style-blend-weights 0.125 0.125 0.125 0.125 0.125 0.125 0.125 0.125 --output source_compressed/compressed-IMG_0677.JPG-blended-rella2-10-style-7-content-5.jpg --learning-rate 10 --iterations 200 --style-weight 7 --content-weight 5



python neural_style.py --content=source_compressed/compressed-IMG_0677.JPG --styles style_compressed/rella_compressed_2/1.jpg style_compressed/rella_compressed_2/2.jpg style_compressed/rella_compressed_2/3.jpg style_compressed/rella_compressed_2/4.jpg style_compressed/rella_compressed_2/5.jpg style_compressed/rella_compressed_2/6.jpg style_compressed/rella_compressed_2/7.jpg style_compressed/rella_compressed_2/8.jpg --style-blend-weights 0.125 0.125 0.125 0.125 0.125 0.125 0.125 0.125 --output source_compressed/compressed-IMG_0677.JPG-blended-rella2-10-style-7-content-5.jpg --learning-rate 10 --iterations 200 --style-weight 7 --content-weight 5






python neural_style.py --content=source_compressed/IMG_0677_1536.jpg --styles style_compressed/rella_compressed_2/1.jpg style_compressed/rella_compressed_2/2.jpg style_compressed/rella_compressed_2/3.jpg style_compressed/rella_compressed_2/4.jpg style_compressed/rella_compressed_2/5.jpg style_compressed/rella_compressed_2/6.jpg style_compressed/rella_compressed_2/7.jpg style_compressed/rella_compressed_2/8.jpg --style-blend-weights 0.125 0.125 0.125 0.125 0.125 0.125 0.125 0.125 --output output/IMG_0677_2048-blended-rella2-iter-$iter-lr-10-style-8-content-5.jpg --learning-rate 10 --iterations 10 --style-weight 8 --content-weight 5 --checkpoint-output "output_checkpoint/checkpoint_IMG_0677_1536_%s.jpg" --checkpoint-iterations 1



for iter in 3000; do
python neural_style.py --content=source_compressed/GOPR1505_1024.jpg --styles style_compressed/rella_compressed_2/1.jpg style_compressed/rella_compressed_2/2.jpg style_compressed/rella_compressed_2/3.jpg style_compressed/rella_compressed_2/4.jpg style_compressed/rella_compressed_2/5.jpg style_compressed/rella_compressed_2/6.jpg style_compressed/rella_compressed_2/7.jpg style_compressed/rella_compressed_2/8.jpg --style-blend-weights 0.125 0.125 0.125 0.125 0.125 0.125 0.125 0.125 --output output/GOPR1505_1024-blended-rella2-iter-$iter-lr-10-style-8-content-5.jpg --learning-rate 10 --iterations $iter --style-weight 8 --content-weight 5 --checkpoint-output "output/checkpoint_GOPR1505_1024_%s.jpg" --checkpoint-iterations 100
python neural_style.py --content=source_compressed/sea_1024.jpg --styles style_compressed/rella_compressed_2/1.jpg style_compressed/rella_compressed_2/2.jpg style_compressed/rella_compressed_2/3.jpg style_compressed/rella_compressed_2/4.jpg style_compressed/rella_compressed_2/5.jpg style_compressed/rella_compressed_2/6.jpg style_compressed/rella_compressed_2/7.jpg style_compressed/rella_compressed_2/8.jpg --style-blend-weights 0.125 0.125 0.125 0.125 0.125 0.125 0.125 0.125 --output output/sea_1024-blended-rella2-iter-$iter-lr-10-style-8-content-5.jpg --learning-rate 10 --iterations $iter --style-weight 8 --content-weight 5 --checkpoint-output "output/checkpoint_sea_1024_%s.jpg" --checkpoint-iterations 100
python neural_style.py --content=source_compressed/IMG_0677_1536.jpg --styles style_compressed/rella_compressed_2/1.jpg style_compressed/rella_compressed_2/2.jpg style_compressed/rella_compressed_2/3.jpg style_compressed/rella_compressed_2/4.jpg style_compressed/rella_compressed_2/5.jpg style_compressed/rella_compressed_2/6.jpg style_compressed/rella_compressed_2/7.jpg style_compressed/rella_compressed_2/8.jpg --style-blend-weights 0.125 0.125 0.125 0.125 0.125 0.125 0.125 0.125 --output output/IMG_0677_1536-blended-rella2-iter-$iter-lr-10-style-8-content-5.jpg --learning-rate 10 --iterations $iter --style-weight 8 --content-weight 5 --checkpoint-output "output/checkpoint_IMG_0677_1536_%s.jpg" --checkpoint-iterations 100
done

python neural_style.py --content=source_compressed/IMG_0677_1536.jpg --styles style_compressed/rella_compressed_2/1.jpg style_compressed/rella_compressed_2/2.jpg style_compressed/rella_compressed_2/3.jpg style_compressed/rella_compressed_2/4.jpg style_compressed/rella_compressed_2/5.jpg style_compressed/rella_compressed_2/6.jpg style_compressed/rella_compressed_2/7.jpg style_compressed/rella_compressed_2/8.jpg --style-blend-weights 0.125 0.125 0.125 0.125 0.125 0.125 0.125 0.125 --output output/IMG_0677_1536-blended-rella2-iter-1500-lr-10-style-15-content-5.jpg --learning-rate 10 --iterations 1500 --style-weight 15 --content-weight 5 --checkpoint-output "output_checkpoint/checkpoint_IMG_0677_1536-blended-rella2-iter-1500-lr-10-style-15-content-5_%s.jpg" --checkpoint-iterations 50


img_source=IMG_0677_1536.jpg
lr=10
style_w=50
content_w=5
iter=1500

python neural_style.py --content=source_compressed/$img_source --styles style_compressed/rella_compressed_2/1.jpg style_compressed/rella_compressed_2/2.jpg style_compressed/rella_compressed_2/3.jpg style_compressed/rella_compressed_2/4.jpg style_compressed/rella_compressed_2/5.jpg style_compressed/rella_compressed_2/6.jpg style_compressed/rella_compressed_2/7.jpg style_compressed/rella_compressed_2/8.jpg --style-blend-weights 0.125 0.125 0.125 0.125 0.125 0.125 0.125 0.125 --output output/IMG_0677_1536-blended-rella2-iter-$iter-lr-$lr-style-$style_w-content-$content_w.jpg --learning-rate 10 --iterations $iter --style-weight $style_w --content-weight $content_w --checkpoint-output "output_checkpoint/checkpoint_$img_source-blended-rella2-iter-$iter-lr-$lr-style-$style_w-content-$content_w_%s.jpg" --checkpoint-iterations 50



img_source=IMG_0677_1536.jpg
lr=10
style_w=50
content_w=5
iter=1500
for img_source in IMG_0677_1536.jpg compressed-IMG_0836.JPG compressed-IMG_0851.JPG compressed-IMG_0864.JPG sea_1024.jpg; do
for style_w in {15..75..20}; do
python neural_style.py --content=source_compressed/todo/$img_source --styles style_compressed/rella_compressed_3/1.jpg style_compressed/rella_compressed_3/2.jpg style_compressed/rella_compressed_3/3.jpg style_compressed/rella_compressed_3/4.jpg style_compressed/rella_compressed_3/5.jpg style_compressed/rella_compressed_3/6.jpg style_compressed/rella_compressed_3/7.jpg style_compressed/rella_compressed_3/8.jpg --style-blend-weights 0.125 0.125 0.125 0.125 0.125 0.125 0.125 0.125 --output output/IMG_0677_1536-blended-rella4-iter-$iter-lr-$lr-style-$style_w-content-$content_w.jpg --learning-rate 10 --iterations $iter --style-weight $style_w --content-weight $content_w --checkpoint-output "output_checkpoint/checkpoint_$img_source-blended-rella4-iter-$iter-lr-$lr-style-$style_w-content-$content_w_%s.jpg" --checkpoint-iterations 50
done
done

// Try style weight very large.
img_source=IMG_0677_1536.jpg
lr=10
style_w=15
content_w=5
iter=1500
python neural_style.py --content=source_compressed/todo/$img_source --styles style_compressed/rella_compressed_3/1.jpg style_compressed/rella_compressed_3/2.jpg style_compressed/rella_compressed_3/3.jpg style_compressed/rella_compressed_3/4.jpg style_compressed/rella_compressed_3/5.jpg style_compressed/rella_compressed_3/6.jpg style_compressed/rella_compressed_3/7.jpg style_compressed/rella_compressed_3/8.jpg --style-blend-weights 0.1 0.1 0.1 0.1 0.1 0.1 0.3 0.1 --output output/IMG_0677_1536-blended-rella4-iter-$iter-lr-$lr-style-$style_w-content-$content_w-bias-7.jpg --learning-rate 10 --iterations $iter --style-weight $style_w --content-weight $content_w --checkpoint-output "output_checkpoint/checkpoint_$img_source-blended-rella4-iter-$iter-lr-$lr-style-$style_w-content-$content_w-bias-7_%s.jpg" --checkpoint-iterations 50

img_source=IMG_0677_1536.jpg
lr=10
style_w=25
content_w=5
iter=1500
python neural_style.py --content=source_compressed/todo/$img_source --styles style_compressed/rella_compressed_3/1.jpg style_compressed/rella_compressed_3/2.jpg style_compressed/rella_compressed_3/3.jpg style_compressed/rella_compressed_3/4.jpg style_compressed/rella_compressed_3/5.jpg style_compressed/rella_compressed_3/6.jpg style_compressed/rella_compressed_3/7.jpg style_compressed/rella_compressed_3/8.jpg --style-blend-weights 0.05 0.05 0.05 0.05 0.05 0.05 0.6 0.05 --output output/IMG_0677_1536-blended-rella4-iter-$iter-lr-$lr-style-$style_w-content-$content_w-bias-7.jpg --learning-rate 10 --iterations $iter --style-weight $style_w --content-weight $content_w --checkpoint-output "output_checkpoint/checkpoint_$img_source-blended-rella4-iter-$iter-lr-$lr-style-$style_w-content-$content_w-bias-7_%s.jpg" --checkpoint-iterations 50

i=0;
for file in *.*; do
i=$((i+1));
convert $file -resize 1024 $i.jpg;
done

img_source=IMG_0677_1536.jpg
lr=10
style_w=25
content_w=5
iter=1500
style=edward_hopper
for style_w in {45..95..10}; do
python neural_style.py --content=source_compressed/todo/$img_source --styles style_compressed/$style/1.jpg style_compressed/$style/2.jpg style_compressed/$style/3.jpg style_compressed/$style/4.jpg style_compressed/$style/5.jpg style_compressed/$style/6.jpg style_compressed/$style/7.jpg style_compressed/$style/8.jpg --style-blend-weights 0.125 0.125 0.125 0.125 0.125 0.125 0.125 0.125 --output output/IMG_0677_1536-blended-rella4-iter-$iter-lr-$lr-style-$style_w-content-$content_w.jpg --learning-rate 10 --iterations $iter --style-weight $style_w --content-weight $content_w --checkpoint-output "output_checkpoint/checkpoint_$img_source-blended-rella4-iter-$iter-lr-$lr-style-$style_w-content-$content_w-bias-7_%s.jpg" --checkpoint-iterations 50
done





# THE FOLLOWING code tries to run the neural style on a given list of folders, a given list of image source, and a given list of style weights.

# claude_monet_1 claude_monet_2 grant_wood

img_source=sea_1024.jpg
lr=10
style_w=25
content_w=5
iter=1500
style=edward_hopper_2
for style in grant_wood; do
# First get the file names
file_names=""
file_i=0
for file in style_compressed/$style/*.jpg; do
if [ "$file_i" -eq "0" ]; then
file_names="$file"
else
file_names="$file_names $file"
fi
file_i=$((file_i+1))
done

# Then get the style weights string
style_blend_weight=$(echo "1.0/$file_i" | bc -l)
style_blend_weights=""
for i in `seq 1 $file_i`; do
if [ "$i" -eq "1" ]; then
style_blend_weights="$style_blend_weight"
else
style_blend_weights="$style_blend_weights $style_blend_weight"
fi
i=$((i+1))
done

#  sea_1024.jpg IMG_0677_1536.jpg compressed-IMG_0836.JPG compressed-IMG_0851.JPG compressed-IMG_0864.JPG
# for style_w in {25..75..50}; do
for img_source in {1..20..1}; do
for style_w in 25; do
python neural_style.py --content=source_compressed/todo/$img_source.jpg --styles $file_names --style-blend-weights $style_blend_weights --output output/$img_source-blended-$style-iter-$iter-lr-$lr-style-$style_w-content-$content_w.jpg --learning-rate 10 --iterations $iter --style-weight $style_w --content-weight $content_w --checkpoint-output "output_checkpoint/checkpoint_$img_source-blended-$style-iter-$iter-lr-$lr-style-$style_w-content-$content_w-bias-7_%s.jpg" --checkpoint-iterations 50
done
done
done


# THE FOLLOWING code tries to run the neural style on a given list of folders, a given list of image source, and a given list of style weights.

# claude_monet_1 claude_monet_2 grant_wood

img_source=sea_1024.jpg
lr=10
style_w=25
content_w=5
iter=1500
style=edward_hopper_2
for style in hjl; do
# First get the file names
file_names=""
file_i=0
for file in style_compressed/$style/*.jpg; do
if [ "$file_i" -eq "0" ]; then
file_names="$file"
else
file_names="$file_names $file"
fi
file_i=$((file_i+1))
done

# Then get the style weights string
style_blend_weight=$(echo "1.0/$file_i" | bc -l)
style_blend_weights=""
for i in `seq 1 $file_i`; do
if [ "$i" -eq "1" ]; then
style_blend_weights="$style_blend_weight"
else
style_blend_weights="$style_blend_weights $style_blend_weight"
fi
i=$((i+1))
done

#  sea_1024.jpg IMG_0677_1536.jpg compressed-IMG_0836.JPG compressed-IMG_0851.JPG compressed-IMG_0864.JPG
for img_source in sea_1024; do
for style_w in 75; do
python neural_style.py --content=source_compressed/todo/$img_source.jpg --styles $file_names --style-blend-weights $style_blend_weights --output output/$img_source-blended-$style-iter-$iter-lr-$lr-style-$style_w-content-$content_w.jpg --learning-rate 10 --iterations $iter --style-weight $style_w --content-weight $content_w --checkpoint-output "output_checkpoint/checkpoint_$img_source-blended-$style-iter-$iter-lr-$lr-style-$style_w-content-$content_w-bias-7_%s.jpg" --checkpoint-iterations 50
done
done
done

img_source=IMG_0677_1536.jpg
lr=10
style_w=25
content_w=5
iter=1500
style=hebitsukai
for pic in {1..8..1}; do
python neural_style.py --content=source_compressed/todo/$img_source --styles style_compressed/$style/$pic.jpg --output output/$img_source-blended-$style-$pic-iter-$iter-lr-$lr-style-$style_w-content-$content_w.jpg --learning-rate 10 --iterations $iter --style-weight $style_w --content-weight $content_w --checkpoint-output "output_checkpoint/checkpoint_$img_source-blended-$style-$pic-iter-$iter-lr-$lr-style-$style_w-content-$content_w_%s.jpg" --checkpoint-iterations 50
done